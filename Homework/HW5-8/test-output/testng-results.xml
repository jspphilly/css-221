<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="150" total="408" passed="258">
  <reporter-output>
  </reporter-output>
  <suite name="List Testing 2" duration-ms="540" started-at="2016-07-20T03:02:09Z" finished-at="2016-07-20T03:02:09Z">
    <groups>
    </groups>
    <test name="Good List" duration-ms="282" started-at="2016-07-20T03:02:09Z" finished-at="2016-07-20T03:02:09Z">
      <class name="Test_5">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_5@6d78f375]" name="testAdd" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_5@6d78f375]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:105)
	at TestCase.addAfter(TestCase.java:259)
	at Test_5.testAddAfter_invalidElement(Test_5.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_5@6d78f375]" name="testAddAfter_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_5@6d78f375]" name="testAddToFront" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_5@6d78f375]" name="testAddToRear" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_5@6d78f375]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_5.testAdd_invalidIndex(Test_5.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_5@6d78f375]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_5.testAdd_invalidIndex(Test_5.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_5@6d78f375]" name="testAdd_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_5@6d78f375]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_5@6d78f375]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_5@6d78f375]" name="testContains_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_5@6d78f375]" name="testFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_5@6d78f375]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_5.testGet_invalidIndex(Test_5.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_5@6d78f375]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_5.testGet_invalidIndex(Test_5.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_5@6d78f375]" name="testGet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_5@6d78f375]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_5@6d78f375]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_5@6d78f375]" name="testIsEmpty" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_5@6d78f375]" name="testIterator" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_5.testIterator(Test_5.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_5@6d78f375]" name="testRemoveFirst" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_5@6d78f375]" name="testLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_5@6d78f375]" name="testRemoveLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_5@6d78f375]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:44)
	at TestCase.remove(TestCase.java:92)
	at Test_5.testRemove_invalidElement(Test_5.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_5@6d78f375]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_5.testRemove_invalidIndex(Test_5.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_5@6d78f375]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_5.testRemove_invalidIndex(Test_5.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_5@6d78f375]" name="testRemove_validElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_5@6d78f375]" name="testRemove_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_5@6d78f375]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_5.testSet_invalidIndex(Test_5.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_5@6d78f375]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_5.testSet_invalidIndex(Test_5.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_5@6d78f375]" name="testSet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_5@6d78f375]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@6d78f375]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_5 -->
      <class name="Test_6">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_6@50c87b21]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_6@50c87b21]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:100)
	at TestCase.addAfter(TestCase.java:259)
	at Test_6.testAddAfter_invalidElement(Test_6.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_6@50c87b21]" name="testAddToFront" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_6@50c87b21]" name="testAddToRear" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_6@50c87b21]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_6.testAdd_invalidIndex(Test_6.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_6@50c87b21]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_6.testAdd_invalidIndex(Test_6.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_6@50c87b21]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_6@50c87b21]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_6@50c87b21]" name="testFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.first(GoodList.java:54)
	at TestCase.first(TestCase.java:103)
	at Test_6.testFirst(Test_6.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_6@50c87b21]" name="testGet" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_6.testGet(Test_6.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_6@50c87b21]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_6@50c87b21]" name="testIsEmpty" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_6@50c87b21]" name="testIterator" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_6.testIterator(Test_6.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_6@50c87b21]" name="testLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.last(GoodList.java:62)
	at TestCase.last(TestCase.java:114)
	at Test_6.testLast(Test_6.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_6@50c87b21]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeFirst(GoodList.java:23)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_6.testRemoveFirst(Test_6.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_6@50c87b21]" name="testRemoveLast" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeLast(GoodList.java:31)
	at TestCase.removeLast(TestCase.java:81)
	at Test_6.testRemoveLast(Test_6.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_6@50c87b21]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:39)
	at TestCase.remove(TestCase.java:92)
	at Test_6.testRemove_invalidElement(Test_6.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_6@50c87b21]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_6.testRemove_invalidIndex(Test_6.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_6@50c87b21]" name="testSet" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_6.testSet(Test_6.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_6@50c87b21]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@50c87b21]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_6 -->
      <class name="Test_7">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_7@5f375618]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_7@5f375618]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:100)
	at TestCase.addAfter(TestCase.java:259)
	at Test_7.testAddAfter_invalidElement(Test_7.java:177)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_7@5f375618]" name="testAddToFront" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_7@5f375618]" name="testAddToRear" duration-ms="2" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_7@5f375618]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_7.testAdd_invalidIndex(Test_7.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_7@5f375618]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_7.testAdd_invalidIndex(Test_7.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_7@5f375618]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_7@5f375618]" name="testFirst" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.first(GoodList.java:54)
	at TestCase.first(TestCase.java:103)
	at Test_7.testFirst(Test_7.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_7@5f375618]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_7@5f375618]" name="testGet" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_7.testGet(Test_7.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_7@5f375618]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_7@5f375618]" name="testIsEmpty" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_7@5f375618]" name="testIterator" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_7.testIterator(Test_7.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_7@5f375618]" name="testLast" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.last(GoodList.java:62)
	at TestCase.last(TestCase.java:114)
	at Test_7.testLast(Test_7.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_7@5f375618]" name="testRemoveFirst" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeFirst(GoodList.java:23)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_7.testRemoveFirst(Test_7.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_7@5f375618]" name="testRemoveLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeLast(GoodList.java:31)
	at TestCase.removeLast(TestCase.java:81)
	at Test_7.testRemoveLast(Test_7.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_7@5f375618]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:39)
	at TestCase.remove(TestCase.java:92)
	at Test_7.testRemove_invalidElement(Test_7.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_7@5f375618]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_7.testRemove_invalidIndex(Test_7.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_7@5f375618]" name="testSet" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_7.testSet(Test_7.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@5f375618]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_7@5f375618]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_7 -->
      <class name="Test_8">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_8@1810399e]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_8@1810399e]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:100)
	at TestCase.addAfter(TestCase.java:259)
	at Test_8.testAddAfter_invalidElement(Test_8.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_8@1810399e]" name="testAddToFront" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_8@1810399e]" name="testAddToRear" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_8@1810399e]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_8.testAdd_invalidIndex(Test_8.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_8@1810399e]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_8.testAdd_invalidIndex(Test_8.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_8@1810399e]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_8@1810399e]" name="testFirst" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.first(GoodList.java:54)
	at TestCase.first(TestCase.java:103)
	at Test_8.testFirst(Test_8.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_8@1810399e]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_8@1810399e]" name="testGet" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_8.testGet(Test_8.java:241)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_8@1810399e]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_8@1810399e]" name="testIsEmpty" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_8@1810399e]" name="testIterator" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_8.testIterator(Test_8.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_8@1810399e]" name="testLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.last(GoodList.java:62)
	at TestCase.last(TestCase.java:114)
	at Test_8.testLast(Test_8.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_8@1810399e]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeFirst(GoodList.java:23)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_8.testRemoveFirst(Test_8.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_8@1810399e]" name="testRemoveLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeLast(GoodList.java:31)
	at TestCase.removeLast(TestCase.java:81)
	at Test_8.testRemoveLast(Test_8.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_8@1810399e]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:39)
	at TestCase.remove(TestCase.java:92)
	at Test_8.testRemove_invalidElement(Test_8.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_8@1810399e]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_8.testRemove_invalidIndex(Test_8.java:209)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_8@1810399e]" name="testSet" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_8.testSet(Test_8.java:220)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_8@1810399e]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@1810399e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_8 -->
      <class name="Test_1">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="4" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_1@5ae9a829]" name="testAdd" duration-ms="3" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_1@5ae9a829]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:100)
	at TestCase.addAfter(TestCase.java:259)
	at Test_1.testAddAfter_invalidElement(Test_1.java:172)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_1@5ae9a829]" name="testAddToFront" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_1@5ae9a829]" name="testAddToRear" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_1@5ae9a829]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 0
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_1.testAdd_invalidIndex(Test_1.java:192)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_1@5ae9a829]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_1.testAdd_invalidIndex(Test_1.java:192)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_1@5ae9a829]" name="testAdd_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_1@5ae9a829]" name="testContains_invalidElement" duration-ms="2" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_1@5ae9a829]" name="testFirst" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.first(GoodList.java:54)
	at TestCase.first(TestCase.java:103)
	at Test_1.testFirst(Test_1.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet()[pri:0, instance:Test_1@5ae9a829]" name="testGet" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_1.testGet(Test_1.java:234)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_1@5ae9a829]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_1@5ae9a829]" name="testIsEmpty" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_1@5ae9a829]" name="testIterator" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_1.testIterator(Test_1.java:142)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_1@5ae9a829]" name="testLast" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.last(GoodList.java:62)
	at TestCase.last(TestCase.java:114)
	at Test_1.testLast(Test_1.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_1@5ae9a829]" name="testRemoveFirst" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeFirst(GoodList.java:23)
	at TestCase.removeFirst(TestCase.java:70)
	at Test_1.testRemoveFirst(Test_1.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_1@5ae9a829]" name="testRemoveLast" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: GoodList
	at GoodList.removeLast(GoodList.java:31)
	at TestCase.removeLast(TestCase.java:81)
	at Test_1.testRemoveLast(Test_1.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_1@5ae9a829]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:39)
	at TestCase.remove(TestCase.java:92)
	at Test_1.testRemove_invalidElement(Test_1.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex()[pri:0, instance:Test_1@5ae9a829]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_1.testRemove_invalidIndex(Test_1.java:202)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:Test_1@5ae9a829]" name="testSet" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_1.testSet(Test_1.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@5ae9a829]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_1@5ae9a829]" name="testSize" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_1 -->
      <class name="Test_2">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_2@6d8a00e3]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_2@6d8a00e3]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:105)
	at TestCase.addAfter(TestCase.java:259)
	at Test_2.testAddAfter_invalidElement(Test_2.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_2@6d8a00e3]" name="testAddAfter_validElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_2@6d8a00e3]" name="testAddToFront" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_2@6d8a00e3]" name="testAddToRear" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_2@6d8a00e3]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_2.testAdd_invalidIndex(Test_2.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_2@6d8a00e3]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_2.testAdd_invalidIndex(Test_2.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_2@6d8a00e3]" name="testAdd_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_2@6d8a00e3]" name="testAdd_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_2@6d8a00e3]" name="testContains_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_2@6d8a00e3]" name="testContains_validElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_2@6d8a00e3]" name="testFirst" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_2@6d8a00e3]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_2.testGet_invalidIndex(Test_2.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_2@6d8a00e3]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_2.testGet_invalidIndex(Test_2.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_2@6d8a00e3]" name="testGet_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_2@6d8a00e3]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_2@6d8a00e3]" name="testIndexOf_validElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_2@6d8a00e3]" name="testIsEmpty" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_2@6d8a00e3]" name="testIterator" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_2.testIterator(Test_2.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_2@6d8a00e3]" name="testLast" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_2@6d8a00e3]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_2@6d8a00e3]" name="testRemoveLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_2@6d8a00e3]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:44)
	at TestCase.remove(TestCase.java:92)
	at Test_2.testRemove_invalidElement(Test_2.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_2@6d8a00e3]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_2.testRemove_invalidIndex(Test_2.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_2@6d8a00e3]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_2.testRemove_invalidIndex(Test_2.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_2@6d8a00e3]" name="testRemove_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_2@6d8a00e3]" name="testRemove_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_2@6d8a00e3]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_2.testSet_invalidIndex(Test_2.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_2@6d8a00e3]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_2.testSet_invalidIndex(Test_2.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_2@6d8a00e3]" name="testSet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_2@6d8a00e3]" name="testSize" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@6d8a00e3]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_2 -->
      <class name="Test_3">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_3@548b7f67]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_3@548b7f67]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:105)
	at TestCase.addAfter(TestCase.java:259)
	at Test_3.testAddAfter_invalidElement(Test_3.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_3@548b7f67]" name="testAddAfter_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_3@548b7f67]" name="testAddToFront" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_3@548b7f67]" name="testAddToRear" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_3@548b7f67]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_3.testAdd_invalidIndex(Test_3.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_3@548b7f67]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_3.testAdd_invalidIndex(Test_3.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_3@548b7f67]" name="testAdd_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_3@548b7f67]" name="testAdd_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_3@548b7f67]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_3@548b7f67]" name="testContains_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_3@548b7f67]" name="testFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_3@548b7f67]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_3.testGet_invalidIndex(Test_3.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_3@548b7f67]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_3.testGet_invalidIndex(Test_3.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_3@548b7f67]" name="testGet_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_3@548b7f67]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_3@548b7f67]" name="testIndexOf_validElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_3@548b7f67]" name="testIsEmpty" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_3@548b7f67]" name="testIterator" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_3.testIterator(Test_3.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_3@548b7f67]" name="testLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_3@548b7f67]" name="testRemoveLast" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_3@548b7f67]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_3@548b7f67]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:44)
	at TestCase.remove(TestCase.java:92)
	at Test_3.testRemove_invalidElement(Test_3.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_3@548b7f67]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_3.testRemove_invalidIndex(Test_3.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_3@548b7f67]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_3.testRemove_invalidIndex(Test_3.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_3@548b7f67]" name="testRemove_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_3@548b7f67]" name="testRemove_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_3@548b7f67]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_3.testSet_invalidIndex(Test_3.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_3@548b7f67]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_3.testSet_invalidIndex(Test_3.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@548b7f67]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_3@548b7f67]" name="testSize" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_3@548b7f67]" name="testSet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
      </class> <!-- Test_3 -->
      <class name="Test_4">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_4@7ac7a4e4]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_invalidElement()[pri:0, instance:Test_4@7ac7a4e4]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.addAfter(GoodList.java:105)
	at TestCase.addAfter(TestCase.java:259)
	at Test_4.testAddAfter_invalidElement(Test_4.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_4@7ac7a4e4]" name="testAddAfter_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_4@7ac7a4e4]" name="testAddToFront" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_4@7ac7a4e4]" name="testAddToRear" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_4@7ac7a4e4]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_4.testAdd_invalidIndex(Test_4.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_4@7ac7a4e4]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
	at java.util.LinkedList.checkPositionIndex(Unknown Source)
	at java.util.LinkedList.add(Unknown Source)
	at GoodList.add(GoodList.java:118)
	at TestCase.add(TestCase.java:170)
	at Test_4.testAdd_invalidIndex(Test_4.java:233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_4@7ac7a4e4]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_4@7ac7a4e4]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_4@7ac7a4e4]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_4@7ac7a4e4]" name="testContains_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testFirst()[pri:0, instance:Test_4@7ac7a4e4]" name="testFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_4@7ac7a4e4]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_4.testGet_invalidIndex(Test_4.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="testGet_invalidIndex(int)[pri:0, instance:Test_4@7ac7a4e4]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.get(Unknown Source)
	at GoodList.get(GoodList.java:133)
	at TestCase.get(TestCase.java:214)
	at Test_4.testGet_invalidIndex(Test_4.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_4@7ac7a4e4]" name="testGet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_invalidElement()[pri:0, instance:Test_4@7ac7a4e4]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_4@7ac7a4e4]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_4@7ac7a4e4]" name="testIsEmpty" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_4@7ac7a4e4]" name="testIterator" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_4.testIterator(Test_4.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testLast()[pri:0, instance:Test_4@7ac7a4e4]" name="testLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveFirst()[pri:0, instance:Test_4@7ac7a4e4]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemoveLast()[pri:0, instance:Test_4@7ac7a4e4]" name="testRemoveLast" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidElement()[pri:0, instance:Test_4@7ac7a4e4]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[GoodList]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: GoodList
	at GoodList.remove(GoodList.java:44)
	at TestCase.remove(TestCase.java:92)
	at Test_4.testRemove_invalidElement(Test_4.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_4@7ac7a4e4]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_4.testRemove_invalidIndex(Test_4.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_4@7ac7a4e4]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.remove(Unknown Source)
	at GoodList.remove(GoodList.java:143)
	at TestCase.remove(TestCase.java:181)
	at Test_4.testRemove_invalidIndex(Test_4.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_4@7ac7a4e4]" name="testRemove_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_4@7ac7a4e4]" name="testRemove_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_4@7ac7a4e4]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: -1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: -1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_4.testSet_invalidIndex(Test_4.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_invalidIndex(int)[pri:0, instance:Test_4@7ac7a4e4]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.LinkedList.checkElementIndex(Unknown Source)
	at java.util.LinkedList.set(Unknown Source)
	at GoodList.set(GoodList.java:123)
	at TestCase.set(TestCase.java:193)
	at Test_4.testSet_invalidIndex(Test_4.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_4@7ac7a4e4]" name="testSet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@7ac7a4e4]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[goodList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:Test_4@7ac7a4e4]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_4 -->
    </test> <!-- Good List -->
    <test name="Bad List" duration-ms="176" started-at="2016-07-20T03:02:09Z" finished-at="2016-07-20T03:02:09Z">
      <class name="Test_5">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_5@2a5ca609]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAddAfter_invalidElement()[pri:0, instance:Test_5@2a5ca609]" name="testAddAfter_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_5.testAddAfter_invalidElement()[pri:0, instance:Test_5@2a5ca609] should have thrown an exception of type class java.util.NoSuchElementException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_5.testAddAfter_invalidElement()[pri:0, instance:Test_5@2a5ca609] should have thrown an exception of type class java.util.NoSuchElementException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_5@2a5ca609]" name="testAddToFront" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_5@2a5ca609]" name="testAddAfter_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609]" name="testAdd_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_5.testAdd_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_5.testAdd_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_5@2a5ca609]" name="testAddToRear" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_5.testAdd_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_5.testAdd_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_5@2a5ca609]" name="testAdd_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_5@2a5ca609]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_5@2a5ca609]" name="testContains_validElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at TestCase.contains(TestCase.java:127)
	at Test_5.testContains_validElement(Test_5.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_5@2a5ca609]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testFirst()[pri:0, instance:Test_5@2a5ca609]" name="testFirst" duration-ms="3" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.first(TestCase.java:104)
	at Test_5.testFirst(Test_5.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testGet_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_5.testGet_invalidIndex(Test_5.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testGet_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_5.testGet_invalidIndex(Test_5.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="FAIL" signature="testIndexOf_invalidElement()[pri:0, instance:Test_5@2a5ca609]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.indexOf(TestCase.java:227)
	at Test_5.testIndexOf_invalidElement(Test_5.java:323)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="FAIL" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_5@2a5ca609]" name="testGet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_5.testGet_validIndex(Test_5.java:293)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_5@2a5ca609]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_5@2a5ca609]" name="testIsEmpty" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="FAIL" signature="testLast()[pri:0, instance:Test_5@2a5ca609]" name="testLast" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.last(TestCase.java:115)
	at Test_5.testLast(Test_5.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_5@2a5ca609]" name="testIterator" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_5.testIterator(Test_5.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemoveFirst()[pri:0, instance:Test_5@2a5ca609]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.removeFirst(TestCase.java:71)
	at Test_5.testRemoveFirst(Test_5.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="FAIL" signature="testRemoveLast()[pri:0, instance:Test_5@2a5ca609]" name="testRemoveLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.removeLast(TestCase.java:82)
	at Test_5.testRemoveLast(Test_5.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidElement()[pri:0, instance:Test_5@2a5ca609]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [6] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [6] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_5.testRemove_invalidElement(Test_5.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="FAIL" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_5.testRemove_invalidIndex(Test_5.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_5@2a5ca609]" name="testRemove_validElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_5.testRemove_validElement(Test_5.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_5.testRemove_invalidIndex(Test_5.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_5@2a5ca609]" name="testRemove_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_5.testRemove_validIndex(Test_5.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="FAIL" signature="testSet_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_5.testSet_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_5.testSet_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_5@2a5ca609]" name="testSet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="FAIL" signature="testSet_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_5.testSet_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_5.testSet_invalidIndex(int)[pri:0, instance:Test_5@2a5ca609] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_5@2a5ca609]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSize()[pri:0, instance:Test_5@2a5ca609]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [-1]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.size(TestCase.java:149)
	at Test_5.testSize(Test_5.java:162)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_5 -->
      <class name="Test_6">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_6@20e2cbe0]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_6@20e2cbe0]" name="testAddToFront" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAddAfter_invalidElement()[pri:0, instance:Test_6@20e2cbe0]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_6.testAddAfter_invalidElement()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.util.NoSuchElementException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_6.testAddAfter_invalidElement()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.util.NoSuchElementException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_6@20e2cbe0]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_6.testAdd_invalidIndex(int)[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_6.testAdd_invalidIndex(int)[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_6@20e2cbe0]" name="testAddToRear" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_6@20e2cbe0]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_6.testAdd_invalidIndex(int)[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_6.testAdd_invalidIndex(int)[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_6@20e2cbe0]" name="testAdd_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_6@20e2cbe0]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="FAIL" signature="testFirst()[pri:0, instance:Test_6@20e2cbe0]" name="testFirst" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_6.testFirst()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_6.testFirst()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="FAIL" signature="testGet()[pri:0, instance:Test_6@20e2cbe0]" name="testGet" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_6.testGet(Test_6.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIsEmpty()[pri:0, instance:Test_6@20e2cbe0]" name="testIsEmpty" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at TestCase.isEmpty(TestCase.java:138)
	at Test_6.testIsEmpty(Test_6.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIndexOf_invalidElement()[pri:0, instance:Test_6@20e2cbe0]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.indexOf(TestCase.java:227)
	at Test_6.testIndexOf_invalidElement(Test_6.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_6@20e2cbe0]" name="testIterator" duration-ms="2" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_6.testIterator(Test_6.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testLast()[pri:0, instance:Test_6@20e2cbe0]" name="testLast" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_6.testLast()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_6.testLast()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="FAIL" signature="testRemoveFirst()[pri:0, instance:Test_6@20e2cbe0]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_6.testRemoveFirst()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_6.testRemoveFirst()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemoveLast()[pri:0, instance:Test_6@20e2cbe0]" name="testRemoveLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_6.testRemoveLast()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_6.testRemoveLast()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="FAIL" signature="testRemove_invalidElement()[pri:0, instance:Test_6@20e2cbe0]" name="testRemove_invalidElement" duration-ms="2" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [6] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [6] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_6.testRemove_invalidElement(Test_6.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidIndex()[pri:0, instance:Test_6@20e2cbe0]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_6.testRemove_invalidIndex(Test_6.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="FAIL" signature="testSet()[pri:0, instance:Test_6@20e2cbe0]" name="testSet" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_6.testSet()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_6.testSet()[pri:0, instance:Test_6@20e2cbe0] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSize()[pri:0, instance:Test_6@20e2cbe0]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [-1]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.size(TestCase.java:149)
	at Test_6.testSize(Test_6.java:136)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_6@20e2cbe0]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_6 -->
      <class name="Test_7">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_7@68be2bc2]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_7@68be2bc2]" name="testAddToFront" duration-ms="3" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="FAIL" signature="testAddAfter_invalidElement()[pri:0, instance:Test_7@68be2bc2]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_7.testAddAfter_invalidElement()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.util.NoSuchElementException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_7.testAddAfter_invalidElement()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.util.NoSuchElementException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_7@68be2bc2]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_7.testAdd_invalidIndex(int)[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_7.testAdd_invalidIndex(int)[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_7@68be2bc2]" name="testAddToRear" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_7@68be2bc2]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_7.testAdd_invalidIndex(int)[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_7.testAdd_invalidIndex(int)[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testFirst()[pri:0, instance:Test_7@68be2bc2]" name="testFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_7.testFirst()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_7.testFirst()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_7@68be2bc2]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_7@68be2bc2]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="FAIL" signature="testGet()[pri:0, instance:Test_7@68be2bc2]" name="testGet" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_7.testGet(Test_7.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="FAIL" signature="testIsEmpty()[pri:0, instance:Test_7@68be2bc2]" name="testIsEmpty" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at TestCase.isEmpty(TestCase.java:138)
	at Test_7.testIsEmpty(Test_7.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="FAIL" signature="testIndexOf_invalidElement()[pri:0, instance:Test_7@68be2bc2]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.indexOf(TestCase.java:227)
	at Test_7.testIndexOf_invalidElement(Test_7.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_7@68be2bc2]" name="testIterator" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_7.testIterator(Test_7.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemoveFirst()[pri:0, instance:Test_7@68be2bc2]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_7.testRemoveFirst()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_7.testRemoveFirst()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testLast()[pri:0, instance:Test_7@68be2bc2]" name="testLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_7.testLast()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_7.testLast()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemoveLast()[pri:0, instance:Test_7@68be2bc2]" name="testRemoveLast" duration-ms="3" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_7.testRemoveLast()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_7.testRemoveLast()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidElement()[pri:0, instance:Test_7@68be2bc2]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [6] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [6] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_7.testRemove_invalidElement(Test_7.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidIndex()[pri:0, instance:Test_7@68be2bc2]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_7.testRemove_invalidIndex(Test_7.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="FAIL" signature="testSet()[pri:0, instance:Test_7@68be2bc2]" name="testSet" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_7.testSet()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_7.testSet()[pri:0, instance:Test_7@68be2bc2] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="FAIL" signature="testSize()[pri:0, instance:Test_7@68be2bc2]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [-1]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.size(TestCase.java:149)
	at Test_7.testSize(Test_7.java:136)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_7@68be2bc2]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_7 -->
      <class name="Test_8">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_8@28feb3fa]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_8@28feb3fa]" name="testAddToFront" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAddAfter_invalidElement()[pri:0, instance:Test_8@28feb3fa]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_8.testAddAfter_invalidElement()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.util.NoSuchElementException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_8.testAddAfter_invalidElement()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.util.NoSuchElementException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_8@28feb3fa]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_8.testAdd_invalidIndex(int)[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_8.testAdd_invalidIndex(int)[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_8@28feb3fa]" name="testAddToRear" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_8@28feb3fa]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_8.testAdd_invalidIndex(int)[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_8.testAdd_invalidIndex(int)[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_8@28feb3fa]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_8@28feb3fa]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testGet()[pri:0, instance:Test_8@28feb3fa]" name="testGet" duration-ms="2" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_8.testGet(Test_8.java:241)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testFirst()[pri:0, instance:Test_8@28feb3fa]" name="testFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_8.testFirst()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_8.testFirst()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIndexOf_invalidElement()[pri:0, instance:Test_8@28feb3fa]" name="testIndexOf_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.indexOf(TestCase.java:227)
	at Test_8.testIndexOf_invalidElement(Test_8.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIsEmpty()[pri:0, instance:Test_8@28feb3fa]" name="testIsEmpty" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at TestCase.isEmpty(TestCase.java:138)
	at Test_8.testIsEmpty(Test_8.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_8@28feb3fa]" name="testIterator" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_8.testIterator(Test_8.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="FAIL" signature="testRemoveFirst()[pri:0, instance:Test_8@28feb3fa]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_8.testRemoveFirst()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_8.testRemoveFirst()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="FAIL" signature="testLast()[pri:0, instance:Test_8@28feb3fa]" name="testLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_8.testLast()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_8.testLast()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemoveLast()[pri:0, instance:Test_8@28feb3fa]" name="testRemoveLast" duration-ms="7" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_8.testRemoveLast()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_8.testRemoveLast()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidElement()[pri:0, instance:Test_8@28feb3fa]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [6] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [6] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_8.testRemove_invalidElement(Test_8.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidIndex()[pri:0, instance:Test_8@28feb3fa]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_8.testRemove_invalidIndex(Test_8.java:209)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSet()[pri:0, instance:Test_8@28feb3fa]" name="testSet" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_8.testSet()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_8.testSet()[pri:0, instance:Test_8@28feb3fa] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_8@28feb3fa]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSize()[pri:0, instance:Test_8@28feb3fa]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [-1]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.size(TestCase.java:149)
	at Test_8.testSize(Test_8.java:137)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_8 -->
      <class name="Test_1">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_1@548a9f61]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAddAfter_invalidElement()[pri:0, instance:Test_1@548a9f61]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_1.testAddAfter_invalidElement()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.util.NoSuchElementException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_1.testAddAfter_invalidElement()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.util.NoSuchElementException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_1@548a9f61]" name="testAddToFront" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_1@548a9f61]" name="testAddToRear" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_1@548a9f61]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_1.testAdd_invalidIndex(int)[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_1.testAdd_invalidIndex(int)[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_1@548a9f61]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_1.testAdd_invalidIndex(int)[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_1.testAdd_invalidIndex(int)[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex()[pri:0, instance:Test_1@548a9f61]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_1@548a9f61]" name="testContains_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testFirst()[pri:0, instance:Test_1@548a9f61]" name="testFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_1.testFirst()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_1.testFirst()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="FAIL" signature="testGet()[pri:0, instance:Test_1@548a9f61]" name="testGet" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_1.testGet(Test_1.java:234)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIndexOf_invalidElement()[pri:0, instance:Test_1@548a9f61]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.indexOf(TestCase.java:227)
	at Test_1.testIndexOf_invalidElement(Test_1.java:244)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="FAIL" signature="testIsEmpty()[pri:0, instance:Test_1@548a9f61]" name="testIsEmpty" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at TestCase.isEmpty(TestCase.java:138)
	at Test_1.testIsEmpty(Test_1.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIterator()[pri:0, instance:Test_1@548a9f61]" name="testIterator" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_1.testIterator(Test_1.java:142)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testLast()[pri:0, instance:Test_1@548a9f61]" name="testLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_1.testLast()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_1.testLast()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="FAIL" signature="testRemoveFirst()[pri:0, instance:Test_1@548a9f61]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_1.testRemoveFirst()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_1.testRemoveFirst()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemoveLast()[pri:0, instance:Test_1@548a9f61]" name="testRemoveLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_1.testRemoveLast()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IllegalStateException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_1.testRemoveLast()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IllegalStateException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="FAIL" signature="testRemove_invalidElement()[pri:0, instance:Test_1@548a9f61]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [6] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [6] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_1.testRemove_invalidElement(Test_1.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="FAIL" signature="testRemove_invalidIndex()[pri:0, instance:Test_1@548a9f61]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_1.testRemove_invalidIndex(Test_1.java:202)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_1@548a9f61]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSet()[pri:0, instance:Test_1@548a9f61]" name="testSet" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_1.testSet()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_1.testSet()[pri:0, instance:Test_1@548a9f61] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="FAIL" signature="testSize()[pri:0, instance:Test_1@548a9f61]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [-1]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.size(TestCase.java:149)
	at Test_1.testSize(Test_1.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_1 -->
      <class name="Test_2">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_2@1753acfe]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="FAIL" signature="testAddAfter_invalidElement()[pri:0, instance:Test_2@1753acfe]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_2.testAddAfter_invalidElement()[pri:0, instance:Test_2@1753acfe] should have thrown an exception of type class java.util.NoSuchElementException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_2.testAddAfter_invalidElement()[pri:0, instance:Test_2@1753acfe] should have thrown an exception of type class java.util.NoSuchElementException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_2@1753acfe]" name="testAddAfter_validElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_2@1753acfe]" name="testAddToFront" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_2@1753acfe]" name="testAddToRear" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_2@1753acfe]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_2.testAdd_invalidIndex(int)[pri:0, instance:Test_2@1753acfe] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_2.testAdd_invalidIndex(int)[pri:0, instance:Test_2@1753acfe] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_2@1753acfe]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_2.testAdd_invalidIndex(int)[pri:0, instance:Test_2@1753acfe] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_2.testAdd_invalidIndex(int)[pri:0, instance:Test_2@1753acfe] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_2@1753acfe]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_2@1753acfe]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_2@1753acfe]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_2@1753acfe]" name="testContains_validElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at TestCase.contains(TestCase.java:127)
	at Test_2.testContains_validElement(Test_2.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testFirst()[pri:0, instance:Test_2@1753acfe]" name="testFirst" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.first(TestCase.java:104)
	at Test_2.testFirst(Test_2.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testGet_invalidIndex(int)[pri:0, instance:Test_2@1753acfe]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_2.testGet_invalidIndex(Test_2.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testGet_invalidIndex(int)[pri:0, instance:Test_2@1753acfe]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_2.testGet_invalidIndex(Test_2.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_2@1753acfe]" name="testGet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_2.testGet_validIndex(Test_2.java:293)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_2@1753acfe]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="FAIL" signature="testIndexOf_invalidElement()[pri:0, instance:Test_2@1753acfe]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.indexOf(TestCase.java:227)
	at Test_2.testIndexOf_invalidElement(Test_2.java:323)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_2@1753acfe]" name="testIsEmpty" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_2@1753acfe]" name="testIterator" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_2.testIterator(Test_2.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemoveFirst()[pri:0, instance:Test_2@1753acfe]" name="testRemoveFirst" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.removeFirst(TestCase.java:71)
	at Test_2.testRemoveFirst(Test_2.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testLast()[pri:0, instance:Test_2@1753acfe]" name="testLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.last(TestCase.java:115)
	at Test_2.testLast(Test_2.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="FAIL" signature="testRemoveLast()[pri:0, instance:Test_2@1753acfe]" name="testRemoveLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.removeLast(TestCase.java:82)
	at Test_2.testRemoveLast(Test_2.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_2@1753acfe]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_2.testRemove_invalidIndex(Test_2.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="FAIL" signature="testRemove_invalidElement()[pri:0, instance:Test_2@1753acfe]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [6] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [6] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_2.testRemove_invalidElement(Test_2.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_2@1753acfe]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_2.testRemove_invalidIndex(Test_2.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_2@1753acfe]" name="testRemove_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_2.testRemove_validElement(Test_2.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="FAIL" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_2@1753acfe]" name="testRemove_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_2.testRemove_validIndex(Test_2.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSet_invalidIndex(int)[pri:0, instance:Test_2@1753acfe]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_2.testSet_invalidIndex(int)[pri:0, instance:Test_2@1753acfe] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_2.testSet_invalidIndex(int)[pri:0, instance:Test_2@1753acfe] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSet_invalidIndex(int)[pri:0, instance:Test_2@1753acfe]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_2.testSet_invalidIndex(int)[pri:0, instance:Test_2@1753acfe] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_2.testSet_invalidIndex(int)[pri:0, instance:Test_2@1753acfe] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_2@1753acfe]" name="testSet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSize()[pri:0, instance:Test_2@1753acfe]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [-1]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.size(TestCase.java:149)
	at Test_2.testSize(Test_2.java:162)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_2@1753acfe]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- Test_2 -->
      <class name="Test_3">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_3@7c16905e]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAddAfter_invalidElement()[pri:0, instance:Test_3@7c16905e]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_3.testAddAfter_invalidElement()[pri:0, instance:Test_3@7c16905e] should have thrown an exception of type class java.util.NoSuchElementException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_3.testAddAfter_invalidElement()[pri:0, instance:Test_3@7c16905e] should have thrown an exception of type class java.util.NoSuchElementException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_3@7c16905e]" name="testAddToFront" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_3@7c16905e]" name="testAddAfter_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_3@7c16905e]" name="testAddToRear" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_3@7c16905e]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_3.testAdd_invalidIndex(int)[pri:0, instance:Test_3@7c16905e] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_3.testAdd_invalidIndex(int)[pri:0, instance:Test_3@7c16905e] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_3@7c16905e]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_3.testAdd_invalidIndex(int)[pri:0, instance:Test_3@7c16905e] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_3.testAdd_invalidIndex(int)[pri:0, instance:Test_3@7c16905e] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_3@7c16905e]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_3@7c16905e]" name="testAdd_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_3@7c16905e]" name="testContains_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testFirst()[pri:0, instance:Test_3@7c16905e]" name="testFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.first(TestCase.java:104)
	at Test_3.testFirst(Test_3.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="FAIL" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_3@7c16905e]" name="testContains_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at TestCase.contains(TestCase.java:127)
	at Test_3.testContains_validElement(Test_3.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testGet_invalidIndex(int)[pri:0, instance:Test_3@7c16905e]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_3.testGet_invalidIndex(Test_3.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="FAIL" signature="testGet_invalidIndex(int)[pri:0, instance:Test_3@7c16905e]" name="testGet_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_3.testGet_invalidIndex(Test_3.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_3@7c16905e]" name="testGet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_3.testGet_validIndex(Test_3.java:293)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_3@7c16905e]" name="testIsEmpty" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIndexOf_invalidElement()[pri:0, instance:Test_3@7c16905e]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.indexOf(TestCase.java:227)
	at Test_3.testIndexOf_invalidElement(Test_3.java:323)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_3@7c16905e]" name="testIndexOf_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testLast()[pri:0, instance:Test_3@7c16905e]" name="testLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.last(TestCase.java:115)
	at Test_3.testLast(Test_3.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_3@7c16905e]" name="testIterator" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_3.testIterator(Test_3.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemoveLast()[pri:0, instance:Test_3@7c16905e]" name="testRemoveLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.removeLast(TestCase.java:82)
	at Test_3.testRemoveLast(Test_3.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="FAIL" signature="testRemoveFirst()[pri:0, instance:Test_3@7c16905e]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.removeFirst(TestCase.java:71)
	at Test_3.testRemoveFirst(Test_3.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_3@7c16905e]" name="testRemove_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_3.testRemove_invalidIndex(Test_3.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="FAIL" signature="testRemove_invalidElement()[pri:0, instance:Test_3@7c16905e]" name="testRemove_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [6] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [6] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_3.testRemove_invalidElement(Test_3.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="FAIL" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_3@7c16905e]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_3.testRemove_invalidIndex(Test_3.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_3@7c16905e]" name="testRemove_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_3.testRemove_validElement(Test_3.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_3@7c16905e]" name="testRemove_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_3.testRemove_validIndex(Test_3.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSet_invalidIndex(int)[pri:0, instance:Test_3@7c16905e]" name="testSet_invalidIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_3.testSet_invalidIndex(int)[pri:0, instance:Test_3@7c16905e] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_3.testSet_invalidIndex(int)[pri:0, instance:Test_3@7c16905e] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="FAIL" signature="testSet_invalidIndex(int)[pri:0, instance:Test_3@7c16905e]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_3.testSet_invalidIndex(int)[pri:0, instance:Test_3@7c16905e] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_3.testSet_invalidIndex(int)[pri:0, instance:Test_3@7c16905e] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_3@7c16905e]" name="testSet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_3@7c16905e]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSize()[pri:0, instance:Test_3@7c16905e]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [-1]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.size(TestCase.java:149)
	at Test_3.testSize(Test_3.java:162)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_3 -->
      <class name="Test_4">
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:Test_4@2a2d45ba]" name="testAdd" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="FAIL" signature="testAddAfter_invalidElement()[pri:0, instance:Test_4@2a2d45ba]" name="testAddAfter_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_4.testAddAfter_invalidElement()[pri:0, instance:Test_4@2a2d45ba] should have thrown an exception of type class java.util.NoSuchElementException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_4.testAddAfter_invalidElement()[pri:0, instance:Test_4@2a2d45ba] should have thrown an exception of type class java.util.NoSuchElementException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddToRear()[pri:0, instance:Test_4@2a2d45ba]" name="testAddToRear" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToRear -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAddAfter_validElement(java.lang.Integer)[pri:0, instance:Test_4@2a2d45ba]" name="testAddAfter_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAfter_validElement -->
        <test-method status="PASS" signature="testAddToFront()[pri:0, instance:Test_4@2a2d45ba]" name="testAddToFront" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToFront -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_4.testAdd_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_4.testAdd_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testAdd_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba]" name="testAdd_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_4.testAdd_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_4.testAdd_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_4@2a2d45ba]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="PASS" signature="testContains_invalidElement()[pri:0, instance:Test_4@2a2d45ba]" name="testContains_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd_validIndex(int)[pri:0, instance:Test_4@2a2d45ba]" name="testAdd_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validAddIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validIndex -->
        <test-method status="FAIL" signature="testContains_validElement(java.lang.Integer)[pri:0, instance:Test_4@2a2d45ba]" name="testContains_validElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at TestCase.contains(TestCase.java:127)
	at Test_4.testContains_validElement(Test_4.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testFirst()[pri:0, instance:Test_4@2a2d45ba]" name="testFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.first(TestCase.java:104)
	at Test_4.testFirst(Test_4.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testGet_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_4.testGet_invalidIndex(Test_4.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testGet_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba]" name="testGet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_4.testGet_invalidIndex(Test_4.java:303)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testGet_validIndex(int, java.lang.Integer)[pri:0, instance:Test_4@2a2d45ba]" name="testGet_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.get(TestCase.java:215)
	at Test_4.testGet_validIndex(Test_4.java:293)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet_validIndex -->
        <test-method status="FAIL" signature="testIndexOf_invalidElement()[pri:0, instance:Test_4@2a2d45ba]" name="testIndexOf_invalidElement" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-1] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.indexOf(TestCase.java:227)
	at Test_4.testIndexOf_invalidElement(Test_4.java:323)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIndexOf_validElement(int, java.lang.Integer)[pri:0, instance:Test_4@2a2d45ba]" name="testIndexOf_validElement" duration-ms="3" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf_validElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testIterator()[pri:0, instance:Test_4@2a2d45ba]" name="testIterator" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at Test_4.testIterator(Test_4.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:Test_4@2a2d45ba]" name="testIsEmpty" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testLast()[pri:0, instance:Test_4@2a2d45ba]" name="testLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.last(TestCase.java:115)
	at Test_4.testLast(Test_4.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemoveFirst()[pri:0, instance:Test_4@2a2d45ba]" name="testRemoveFirst" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.removeFirst(TestCase.java:71)
	at Test_4.testRemoveFirst(Test_4.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveFirst -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemoveLast()[pri:0, instance:Test_4@2a2d45ba]" name="testRemoveLast" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.removeLast(TestCase.java:82)
	at Test_4.testRemoveLast(Test_4.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveLast -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidElement()[pri:0, instance:Test_4@2a2d45ba]" name="testRemove_invalidElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [6] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [6] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_4.testRemove_invalidElement(Test_4.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_4.testRemove_invalidIndex(Test_4.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testRemove_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba]" name="testRemove_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_4.testRemove_invalidIndex(Test_4.java:253)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidIndex -->
        <test-method status="FAIL" signature="testRemove_validElement(java.lang.Integer)[pri:0, instance:Test_4@2a2d45ba]" name="testRemove_validElement" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="validElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:93)
	at Test_4.testRemove_validElement(Test_4.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElement -->
        <test-method status="FAIL" signature="testRemove_validIndex(int, java.lang.Integer)[pri:0, instance:Test_4@2a2d45ba]" name="testRemove_validIndex" duration-ms="1" started-at="2016-07-19T21:02:09Z" data-provider="indexedValidElements" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:130)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:179)
	at TestCase.remove(TestCase.java:182)
	at Test_4.testRemove_validIndex(Test_4.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSet_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_4.testSet_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_4.testSet_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="testSet_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba]" name="testSet_invalidIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="invalidIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_4.testSet_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba] should have thrown an exception of type class java.lang.IndexOutOfBoundsException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_4.testSet_invalidIndex(int)[pri:0, instance:Test_4@2a2d45ba] should have thrown an exception of type class java.lang.IndexOutOfBoundsException
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1350)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_invalidIndex -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="1" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize(java.lang.String)[pri:0, instance:Test_4@2a2d45ba]" name="initialize" is-config="true" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[badList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSet_validIndex(int)[pri:0, instance:Test_4@2a2d45ba]" name="testSet_validIndex" duration-ms="0" started-at="2016-07-19T21:02:09Z" data-provider="validIndexes" finished-at="2016-07-19T21:02:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet_validIndex -->
        <test-method status="FAIL" signature="testSize()[pri:0, instance:Test_4@2a2d45ba]" name="testSize" duration-ms="0" started-at="2016-07-19T21:02:09Z" finished-at="2016-07-19T21:02:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [-1]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at TestCase.size(TestCase.java:149)
	at Test_4.testSize(Test_4.java:162)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- Test_4 -->
    </test> <!-- Bad List -->
  </suite> <!-- List Testing 2 -->
</testng-results>
